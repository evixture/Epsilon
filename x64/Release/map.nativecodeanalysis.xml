<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\console\</FILEPATH>
      <FILENAME>console.h</FILENAME>
      <LINE>122</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TCOD_Console::end</FUNCTION>
    <DECORATED>?end@TCOD_Console@@QEAAPEAUTCOD_ConsoleTile@@XZ</DECORATED>
    <FUNCLINE>120</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\console\</FILEPATH>
      <FILENAME>console.h</FILENAME>
      <LINE>126</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>TCOD_Console::end</FUNCTION>
    <DECORATED>?end@TCOD_Console@@QEBAPEBUTCOD_ConsoleTile@@XZ</DECORATED>
    <FUNCLINE>124</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\tileset\</FILEPATH>
      <FILENAME>tileset.h</FILENAME>
      <LINE>52</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'tcod::tileset::Tileset::tiles_last_known_capacity' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>tcod::tileset::Tileset::{ctor}</FUNCTION>
    <DECORATED>??0Tileset@tileset@tcod@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>tcod::tileset::Tileset::tiles_last_known_capacity</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\tileset\</FILEPATH>
      <FILENAME>tileset.h</FILENAME>
      <LINE>78</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>tcod::tileset::Tileset::set_tile</FUNCTION>
    <DECORATED>?set_tile@Tileset@tileset@tcod@@QEAAHAEBVTile@23@@Z</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::w' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::w</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::y' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::y</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::position' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::position</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::x' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::x</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::horizontal' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::horizontal</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>77</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::h' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@XZ</DECORATED>
    <FUNCLINE>77</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::h</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::position' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@HHHH@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::position</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Libtcod\custom-libtcod-master\src\libtcod\</FILEPATH>
      <FILENAME>bsp.hpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'TCODBsp::horizontal' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>TCODBsp::{ctor}</FUNCTION>
    <DECORATED>??0TCODBsp@@QEAA@HHHH@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>TCODBsp::horizontal</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>utility.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Position2::x' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Position2::{ctor}</FUNCTION>
    <DECORATED>??0Position2@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Position2::x</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>utility.h</FILENAME>
      <LINE>22</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Position2::y' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Position2::{ctor}</FUNCTION>
    <DECORATED>??0Position2@@QEAA@XZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Position2::y</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>utility.h</FILENAME>
      <LINE>38</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Position3::z' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Position3::{ctor}</FUNCTION>
    <DECORATED>??0Position3@@QEAA@XZ</DECORATED>
    <FUNCLINE>38</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Position3::z</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>utility.h</FILENAME>
      <LINE>53</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Position4::h' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Position4::{ctor}</FUNCTION>
    <DECORATED>??0Position4@@QEAA@XZ</DECORATED>
    <FUNCLINE>53</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Position4::h</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Map::createBlockMap</FUNCTION>
    <DECORATED>?createBlockMap@Map@@AEAA_NAEAVxml_node@pugi@@@Z</DECORATED>
    <FUNCLINE>161</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Map::createBlockMap</FUNCTION>
    <DECORATED>?createBlockMap@Map@@AEAA_NAEAVxml_node@pugi@@@Z</DECORATED>
    <FUNCLINE>161</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>188</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Map::createBlockMap</FUNCTION>
    <DECORATED>?createBlockMap@Map@@AEAA_NAEAVxml_node@pugi@@@Z</DECORATED>
    <FUNCLINE>161</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>296</LINE>
      <COLUMN>100</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Map::getCreatures</FUNCTION>
    <DECORATED>?getCreatures@Map@@AEAA_NAEAVxml_node@pugi@@@Z</DECORATED>
    <FUNCLINE>213</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>540</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Map::getBlock</FUNCTION>
    <DECORATED>?getBlock@Map@@QEBA?AV?$shared_ptr@UBlock@@@std@@UPosition3@@@Z</DECORATED>
    <FUNCLINE>536</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>558</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>World::isExplored</FUNCTION>
    <DECORATED>?isExplored@World@@QEBA_NAEAUPosition3@@@Z</DECORATED>
    <FUNCLINE>556</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>580</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>World::getBgColor</FUNCTION>
    <DECORATED>?getBgColor@World@@QEBA?AVTCODColor@@AEAUPosition3@@@Z</DECORATED>
    <FUNCLINE>578</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>E:\Projects\Visual Studio\Libtcod Development\Epsilon\</FILEPATH>
      <FILENAME>map.cpp</FILENAME>
      <LINE>620</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>World::isInPlayerFov</FUNCTION>
    <DECORATED>?isInPlayerFov@World@@QEBA_NUPosition4@@@Z</DECORATED>
    <FUNCLINE>611</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>